import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as r}from"./app-Bhrl3aEc.js";const n={};function o(p,e){return r(),a("div",null,[...e[0]||(e[0]=[i('<h2 id="客户端-服务器架构-c-s" tabindex="-1"><a class="header-anchor" href="#客户端-服务器架构-c-s"><span>客户端-服务器架构 (C/S)</span></a></h2><p>客户端-服务器架构，也称C/S架构、主从式架构，是一种将客户端与服务器分割开来的分布式架构。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。有很多不同类型的服务器，例如文件服务器、游戏服务器等。<a href="https://zh.wikipedia.org/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">了解更多</a></p><h2 id="远程过程调用协议-rpc" tabindex="-1"><a class="header-anchor" href="#远程过程调用协议-rpc"><span>远程过程调用协议 (RPC)</span></a></h2><p>远程过程调用是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一个地址空间（通常为一个开放网络的一台计算机）的子程序，而程序员就像调用本地程序一样，无需额外地为这个交互作用编程（无需关注细节）。RPC是一种服务器-客户端（Client/Server）模式，经典实现是一个通过发送请求-接受回应进行信息交互的系统。<a href="https://zh.wikipedia.org/wiki/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8" target="_blank" rel="noopener noreferrer">了解更多</a></p><h2 id="philia-实现端-implementation" tabindex="-1"><a class="header-anchor" href="#philia-实现端-implementation"><span>Philia 实现端 (Implementation)</span></a></h2><p>实现端与聊天平台对接，提供 Philia 标准调用接口。</p><h2 id="philia-应用端-application" tabindex="-1"><a class="header-anchor" href="#philia-应用端-application"><span>Philia 应用端 (Application)</span></a></h2><p>应用端与实现端对接，通过 Philia 标准调用接口，提供应用功能实现。</p>',8)])])}const l=t(n,[["render",o]]),h=JSON.parse('{"path":"/dev/design.html","title":"设计模式","lang":"zh-CN","frontmatter":{"title":"设计模式","icon":"code","order":3,"category":["开发指南"],"description":"客户端-服务器架构 (C/S) 客户端-服务器架构，也称C/S架构、主从式架构，是一种将客户端与服务器分割开来的分布式架构。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。有很多不同类型的服务器，例如文件服务器、游戏服务器等。了解更多 远程过程调用协议 (RPC) 远程过程调用是一个计算机通信协议。该协议允许运行于一台计算机的程序调用...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-24T13:08:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🌌\\",\\"url\\":\\"https://github.com/TimeRainStarSky\\"}]}"],["meta",{"property":"og:url","content":"https://pg.trss.me/dev/design.html"}],["meta",{"property":"og:site_name","content":"菲莉娅 Philia"}],["meta",{"property":"og:title","content":"设计模式"}],["meta",{"property":"og:description","content":"客户端-服务器架构 (C/S) 客户端-服务器架构，也称C/S架构、主从式架构，是一种将客户端与服务器分割开来的分布式架构。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。有很多不同类型的服务器，例如文件服务器、游戏服务器等。了解更多 远程过程调用协议 (RPC) 远程过程调用是一个计算机通信协议。该协议允许运行于一台计算机的程序调用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T13:08:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T13:08:38.000Z"}]]},"git":{"createdTime":1756040918000,"updatedTime":1756040918000,"contributors":[{"name":"🌌","username":"","email":"Time.Rain.Star.Sky@Gmail.com","commits":1}]},"readingTime":{"minutes":1.14,"words":341},"filePathRelative":"dev/design.md","autoDesc":true}');export{l as comp,h as data};
