import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as i,d as n,a as o,w as a,r as h,o as g,e}from"./app-Ds-aHzUF.js";const c={};function B(A,s){const r=h("Tabs"),k=h("Catalog");return g(),d("div",null,[s[4]||(s[4]=i("h2",{id:"元信息",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#元信息"},[i("span",null,"元信息")])],-1)),s[5]||(s[5]=i("p",null,"客户端/服务端连接信息。",-1)),n(r,{data:[{id:"定义"},{id:"示例"}]},{title0:a(({value:t,isActive:l})=>[...s[0]||(s[0]=[e("定义",-1)])]),title1:a(({value:t,isActive:l})=>[...s[1]||(s[1]=[e("示例",-1)])]),tab0:a(({value:t,isActive:l})=>[...s[2]||(s[2]=[i("table",null,[i("thead",null,[i("tr",null,[i("th",null,"参数名"),i("th",null,"类型"),i("th",null,"描述")])]),i("tbody",null,[i("tr",null,[i("td",null,"id"),i("td",null,"string"),i("td",null,"端唯一标识符（推荐 ULID）")]),i("tr",null,[i("td",null,"name"),i("td",null,"string"),i("td",null,"端名称")]),i("tr",null,[i("td",null,"version"),i("td",null,"number"),i("td",null,"端版本号")]),i("tr",null,[i("td",null,"encode"),i("td",null,"string[]"),i("td",null,"支持的编码格式数组")]),i("tr",null,[i("td",null,"verify"),i("td",null,"string[]"),i("td",null,"支持的校验格式数组")])])],-1)])]),tab1:a(({value:t,isActive:l})=>[...s[3]||(s[3]=[i("div",{class:"language-js line-numbers-mode","data-highlighter":"shiki","data-ext":"js",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-js"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"  id"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"01JSRN5WPSWXW7P6EHP8Q65FGB"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"  name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"Client"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"  version"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"  encode"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"MsgPack"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"CBOR"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"V8Serializer"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"JSON"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"],")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"  verify"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"None"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"CRC32"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"MD5"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"SHA256"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"SHA3-512"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"ZSTD"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"GZIP"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),s[6]||(s[6]=o(`<h2 id="编码格式" tabindex="-1"><a class="header-anchor" href="#编码格式"><span>编码格式</span></a></h2><p>编码格式数组按优先级从大到小排序。</p><p>标准规定必须支持的编码格式为：<a href="https://json.org" target="_blank" rel="noopener noreferrer">JSON</a> 和 <a href="https://msgpack.org" target="_blank" rel="noopener noreferrer">MsgPack</a>，并优先使用 <code>MsgPack</code>。</p><p>TypeScript 实现支持的编码格式（按优先级排序）：</p><p><a href="https://msgpack.org" target="_blank" rel="noopener noreferrer">MsgPack</a> <a href="https://cbor.io" target="_blank" rel="noopener noreferrer">CBOR</a> <a href="https://nodejs.org/api/v8.html" target="_blank" rel="noopener noreferrer">V8Serializer</a> <a href="https://json.org" target="_blank" rel="noopener noreferrer">JSON</a></p><h2 id="校验格式" tabindex="-1"><a class="header-anchor" href="#校验格式"><span>校验格式</span></a></h2><p>标准规定必须支持的校验格式为：<code>None</code>和<code>CRC32</code>。</p><p><code>None</code>表示不使用校验，如果通信协议自带校验，则优先使用<code>None</code>，否则使用<code>CRC32</code>。</p><p>校验数据拼接在编码数据前，<code>CRC32</code>编码使用<code>UInt32BE</code>，其他编码使用二进制格式而不是<code>HEX</code>。</p><p>TypeScript 实现支持的校验格式（按强度和消耗性能程度排序）：</p><p><code>None</code> <code>CRC32</code> <code>MD5</code> <code>SHA256</code> <code>SHA3-512</code></p><h2 id="压缩格式" tabindex="-1"><a class="header-anchor" href="#压缩格式"><span>压缩格式</span></a></h2><p>由于压缩格式一般提供了校验，所以压缩格式包含在校验格式内。</p><p>如果是本地通信，优先使用校验；远程通信，则优先使用压缩。</p><p>标准不规定必须支持压缩格式，TypeScript 实现支持的压缩格式：<a href="https://zstd.net" target="_blank" rel="noopener noreferrer">ZSTD</a> <a href="https://gzip.org" target="_blank" rel="noopener noreferrer">GZIP</a></p><h2 id="通信格式协商" tabindex="-1"><a class="header-anchor" href="#通信格式协商"><span>通信格式协商</span></a></h2><ol><li>客户端-服务端连接建立后，发送与接收的第一条消息为元信息。</li></ol><div class="hint-container important"><p class="hint-container-title">重要</p><p>元信息规定为使用<code>JSON</code>编码，<code>CRC32</code>校验。</p></div><ol start="2"><li><p>收到元信息后，先检查版本号是否一致，然后检查编码格式与校验格式。</p></li><li><p><strong>发送</strong>的编码格式：以自身支持的格式数组开始遍历，使用第一个对方支持的格式。</p></li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">encode</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> remote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">verify</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">verify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> remote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">verify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p><strong>接收</strong>的解码格式：以对方支持的格式数组开始遍历，使用第一个自身支持的格式。</p></li><li><p>若出现以下问题，则认为连接失败，并立即关闭连接：</p></li></ol><ul><li><p>连接建立后5秒(send)未收到元信息</p></li><li><p>元信息解码错误</p></li><li><p>没有双方都支持的编码、校验格式</p></li></ul>`,22)),n(k)])}const u=p(c,[["render",B]]),F=JSON.parse('{"path":"/dev/comm/","title":"通信协议","lang":"zh-CN","frontmatter":{"dir":{"order":5},"title":"通信协议","icon":"code","order":1,"category":["开发指南","通信协议"],"description":"元信息 客户端/服务端连接信息。 编码格式 编码格式数组按优先级从大到小排序。 标准规定必须支持的编码格式为：JSON 和 MsgPack，并优先使用 MsgPack。 TypeScript 实现支持的编码格式（按优先级排序）： MsgPack CBOR V8Serializer JSON 校验格式 标准规定必须支持的校验格式为：None和CRC32。...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通信协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-25T07:00:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🌌\\",\\"url\\":\\"https://github.com/TimeRainStarSky\\"}]}"],["meta",{"property":"og:url","content":"https://pg.trss.me/dev/comm/"}],["meta",{"property":"og:site_name","content":"菲莉娅 Philia"}],["meta",{"property":"og:title","content":"通信协议"}],["meta",{"property":"og:description","content":"元信息 客户端/服务端连接信息。 编码格式 编码格式数组按优先级从大到小排序。 标准规定必须支持的编码格式为：JSON 和 MsgPack，并优先使用 MsgPack。 TypeScript 实现支持的编码格式（按优先级排序）： MsgPack CBOR V8Serializer JSON 校验格式 标准规定必须支持的校验格式为：None和CRC32。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-25T07:00:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-25T07:00:02.000Z"}]]},"git":{"createdTime":1756105202000,"updatedTime":1756105202000,"contributors":[{"name":"🌌","username":"","email":"Time.Rain.Star.Sky@Gmail.com","commits":1}]},"readingTime":{"minutes":2,"words":600},"filePathRelative":"dev/comm/README.md","autoDesc":true}');export{u as comp,F as data};
