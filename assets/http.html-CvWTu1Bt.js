import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as r,b as n,e as t,d as a,w as i,r as d,o as s}from"./app-Bhrl3aEc.js";const c={};function m(P,e){const o=d("RouteLink");return s(),l("div",null,[e[6]||(e[6]=r('<p>HTTP 用于只需要单向请求 API 的情况，作为附加协议。</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>HTTP 协议仅可单向请求服务端，请勿调用需反向请求客户端的 API，如：接收事件(receiveEvent)</p></div><h2 id="请求格式" tabindex="-1"><a class="header-anchor" href="#请求格式"><span>请求格式</span></a></h2><p>请求的 API 名作为请求路径，不需要请求参数的 API 可用 GET 方法，否则使用 POST。</p><p>POST 支持的编码格式为：<a href="https://json.org" target="_blank" rel="noopener noreferrer">JSON</a> 和 <a href="https://msgpack.org" target="_blank" rel="noopener noreferrer">MsgPack</a>，并默认使用 <code>JSON</code>。</p><p>使用 MsgPack 时需加请求头：<code>Content-Type: application/vnd.msgpack</code></p><h3 id="请求-url-参数" tabindex="-1"><a class="header-anchor" href="#请求-url-参数"><span>请求 URL 参数</span></a></h3>',7)),n("ul",null,[e[5]||(e[5]=n("li",null,"id 请求标识符：若存在此参数，则结果会缓存5分钟(idle)，缓存时间内请求同一标识符，直接返回缓存结果。",-1)),n("li",null,[e[2]||(e[2]=t("async 异步处理：若存在此参数，并且该 API 会返回",-1)),a(o,{to:"/dev/call.html#_2-%E6%AD%A3%E5%9C%A8%E6%89%A7%E8%A1%8C"},{default:i(()=>[...e[0]||(e[0]=[t("正在执行",-1)])]),_:1}),e[3]||(e[3]=t("，则提交异步处理，响应 202 无结果，若该 API 直接返回",-1)),a(o,{to:"/dev/call.html#_1-%E5%93%8D%E5%BA%94"},{default:i(()=>[...e[1]||(e[1]=[t("响应",-1)])]),_:1}),e[4]||(e[4]=t("，则仍响应 200 结果，用于：",-1))])]),e[7]||(e[7]=r('<ol><li>只需要执行，不需要结果</li><li>API 处理时间很长，为防止连接断开丢失结果，与 id 参数配合，轮询得到结果。</li></ol><h2 id="响应格式" tabindex="-1"><a class="header-anchor" href="#响应格式"><span>响应格式</span></a></h2><ul><li>200 正常响应</li><li>202 异步处理</li><li>400 请求格式错误</li><li>404 API 不存在</li><li>500 API 处理错误</li></ul><p>响应格式编码与请求相同，默认 JSON，使用 MsgPack 需加请求头。</p><h2 id="压缩格式" tabindex="-1"><a class="header-anchor" href="#压缩格式"><span>压缩格式</span></a></h2><p>POST 请求压缩需加请求头：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Reference/Headers/Content-Encoding" target="_blank" rel="noopener noreferrer">Content-Encoding</a></p><div class="hint-container important"><p class="hint-container-title">重要</p><p>协议没有规定必须支持压缩，请先检查服务端支持的压缩算法，在响应头：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Reference/Headers/Accept-Encoding" target="_blank" rel="noopener noreferrer">Accept-Encoding</a></p></div><p>响应的压缩格式按请求的 <code>Content-Encoding</code> <code>Accept-Encoding</code> 从前往后匹配服务端支持的压缩格式，若使用了压缩格式，则会写在响应头 <code>Content-Encoding</code>，若无则不压缩。</p>',8))])}const g=p(c,[["render",m]]),A=JSON.parse('{"path":"/dev/comm/http.html","title":"HTTP 协议","lang":"zh-CN","frontmatter":{"title":"HTTP 协议","icon":"code","order":4,"category":["开发指南","通信协议"],"description":"HTTP 用于只需要单向请求 API 的情况，作为附加协议。 重要 HTTP 协议仅可单向请求服务端，请勿调用需反向请求客户端的 API，如：接收事件(receiveEvent) 请求格式 请求的 API 名作为请求路径，不需要请求参数的 API 可用 GET 方法，否则使用 POST。 POST 支持的编码格式为：JSON 和 MsgPack，并默认...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-24T13:08:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🌌\\",\\"url\\":\\"https://github.com/TimeRainStarSky\\"}]}"],["meta",{"property":"og:url","content":"https://pg.trss.me/dev/comm/http.html"}],["meta",{"property":"og:site_name","content":"菲莉娅 Philia"}],["meta",{"property":"og:title","content":"HTTP 协议"}],["meta",{"property":"og:description","content":"HTTP 用于只需要单向请求 API 的情况，作为附加协议。 重要 HTTP 协议仅可单向请求服务端，请勿调用需反向请求客户端的 API，如：接收事件(receiveEvent) 请求格式 请求的 API 名作为请求路径，不需要请求参数的 API 可用 GET 方法，否则使用 POST。 POST 支持的编码格式为：JSON 和 MsgPack，并默认..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T13:08:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T13:08:38.000Z"}]]},"git":{"createdTime":1756040918000,"updatedTime":1756040918000,"contributors":[{"name":"🌌","username":"","email":"Time.Rain.Star.Sky@Gmail.com","commits":1}]},"readingTime":{"minutes":1.52,"words":455},"filePathRelative":"dev/comm/http.md","autoDesc":true}');export{g as comp,A as data};
